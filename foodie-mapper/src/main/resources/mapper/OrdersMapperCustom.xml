<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.atm.mapper.OrdersMapperCustom">

    <resultMap id="myOrdersMap" type="me.atm.pojo.vo.MyOrdersVO">
        <id column="orderId" property="orderId"/>
        <result column="createdTime" property="createdTime"/>
        <result column="payMethod" property="payMethod"/>
        <result column="realPayAmount" property="realPayAmount"/>
        <result column="postAmount" property="postAmount"/>
        <result column="isComment" property="isComment"/>
        <result column="orderStatus" property="orderStatus"/>
        <!-- 这里如果不按照此方式写嵌套语句的话，返回给前端的数据将直接把子订单当做分页的 -->
        <collection property="subOrderItemList"
                    select="getMySubOrders"
                    column="orderId"
                    ofType="me.atm.pojo.vo.MySubOrderItemVO">
            <result column="itemId" property="itemId"/>
            <result column="itemImg" property="itemImg"/>
            <result column="itemName" property="itemName"/>
            <result column="itemSpecName" property="itemSpecName"/>
            <result column="buyCounts" property="buyCounts"/>
            <result column="price" property="price"/>
        </collection>
    </resultMap>

    <select id="queryMyOrders" resultMap="myOrdersMap">
        SELECT
        o.id AS orderId,
        o.created_time AS createdTime,
        o.pay_method AS payMethod,
        o.real_pay_amount as realPayAmount,
        o.post_amount AS postAmount,
        o.is_comment AS isComment,
        os.order_status AS orderStatus
        FROM
        orders o
        LEFT JOIN
        order_status os
        ON
        o.id = os.order_id
        WHERE
        o.user_id = #{paramsMap.userId}
        AND
        o.is_delete = 0
        <if test="paramsMap.orderStatus != null">
            AND os.order_status = #{paramsMap.orderStatus}
        </if>
        ORDER BY o.updated_time ASC
    </select>

    <select id="getMySubOrders" parameterType="String" resultType="me.atm.pojo.vo.MySubOrderItemVO">
        SELECT
            item_id AS itemId,
            item_name AS itemName,
            item_img AS itemImg,
            item_spec_name AS itemSpecName,
            price AS price,
            buy_counts AS buyCounts
        FROM
            order_items
        WHERE
            order_id = #{orderId}
    </select>

    <select id="getMyOrderStatusCount" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        orders o
        LEFT JOIN
        order_status os
        on
        o.id = os.order_id
        WHERE
        o.user_id = #{userId}
        AND
        os.order_status = #{orderStatus}
        <if test="isComment != null">
            and o.is_comment = #{isComment}
        </if>
    </select>

    <select id="getMyOrderTrend" resultType="me.atm.pojo.OrderStatus">

        SELECT
            os.order_id as orderId,
            os.order_status as orderStatus,
            os.created_time as createdTime,
            os.pay_time as payTime,
            os.deliver_time as deliverTime,
            os.success_time as successTime,
            os.close_time as closeTime,
            os.comment_time as commentTime
        FROM
          orders o
        LEFT JOIN
          order_status os
        on
          o.id = os.order_id
        WHERE
          o.is_delete = 0
        AND
          o.user_id = #{userId}
        AND
          os.order_status in (20, 30, 40)
        ORDER BY
          os.order_id
        DESC
    </select>

</mapper>